//! # Shared Types and Protobuf Bindings
//!
//! This crate provides the shared interface and protocol definitions for the
//! `ferroid` streaming ID generation ecosystem. It contains:
//!
//! - Common type aliases and constants for Snowflake-style ID encoding
//! - A centralized [`Error`, `Result`] types used across the service
//! - Auto-generated protobuf bindings for the gRPC interface (`ferroid.proto`)
//!
//! This crate is intended to be used by both the gRPC server and any external
//! clients wishing to interact with it programmatically.
//!
//! ## Protobuf Usage
//!
//! The [`crate::proto`] module contains the gRPC interface generated by
//! [`tonic::include_proto!`] and the precompiled [`FILE_DESCRIPTOR_SET`] used
//! for reflection support.
//!
//! ```rust
//! use ferroid_tonic_core::proto::id_generator_client::IdGeneratorClient;
//! ```
//!
//! Clients should deserialize `IdChunk.packed_ids` using the agreed-upon
//! fixed-width format (typically `u64` or `u128`, little-endian).
//!
//! [`FILE_DESCRIPTOR_SET`]: crate::proto::FILE_DESCRIPTOR_SET

mod common;
pub use common::*;
