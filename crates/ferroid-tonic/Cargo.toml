[package]
name = "ferroid-tonic"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
readme.workspace = true
description.workspace = true
repository.workspace = true
documentation.workspace = true
keywords.workspace = true
publish = false

[[bin]]
name = "tonic-server"
path = "src/server/main.rs"

[[bin]] 
name = "tonic-client"
path = "src/client/main.rs"

[dependencies]
ferroid = { path = "../ferroid", features = ["async-tokio"] }
tonic = { workspace = true, features = ["prost", "transport", "router", "codegen", "zstd", "deflate", "gzip", "tls-webpki-roots"] }
tonic-reflection = { workspace = true, features = ["server"] }
tonic-web = { workspace = true }
tokio = { workspace = true, features = ["parking_lot", "rt-multi-thread", "signal"] }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors"] }
prost = { workspace = true, features = ["derive", "std"] }
prost-types = { workspace = true, features = ["std"] }
tokio-stream = { workspace = true }
futures = { workspace = true }
tokio-util = { workspace = true }
bytes = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true, optional = true }
clap = { workspace = true, features = ["derive", "env", "color", "error-context", "help", "std", "suggestions", "usage"] }
anyhow = { workspace = true, features = ["std"] }
opentelemetry_sdk = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry-otlp = { workspace = true, optional = true, features = ["gzip-tonic", "zstd-tonic", "grpc-tonic"] }
opentelemetry-semantic-conventions = { workspace = true, optional = true, features = ["semconv_experimental"] }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, features = ["smallvec", "fmt", "ansi", "tracing-log", "std", "env-filter", "json", "chrono"] }
dotenvy = { workspace = true }

[build-dependencies]
tonic-build = { workspace = true, features = ["prost"] }

[features]
default = []
tracing = [
    "dep:tracing",
    "opentelemetry/trace",
    "opentelemetry_sdk/trace",
    "opentelemetry-otlp",
    "opentelemetry-otlp/trace",
    "opentelemetry-semantic-conventions",
    "tracing-opentelemetry"
]
metrics = [
    "opentelemetry/metrics",
    "opentelemetry_sdk/metrics",
    "opentelemetry-otlp",
    "opentelemetry-otlp/metrics",
    "opentelemetry-semantic-conventions",
    "tracing-opentelemetry/metrics"
]

telemetry = [
    "opentelemetry-otlp/tls",
]
