name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # allow manual triggers
  workflow_dispatch: {}

# Cancel in progress workflows on pull_requests
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "31.1"

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Restore Cargo Cache
        id: cargo-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-a-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-a

      - name: Run all unit tests
        run: cargo test --all-features -- --nocapture

      - name: Save Cargo Cache
        id: cargo-cache-save
        if: always() && steps.cargo-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ steps.cargo-cache-restore.outputs.cache-primary-key }}
